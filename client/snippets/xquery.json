{
	"Create function": {
		"prefix": "fun",
		"body": [
			"declare function ${1}(${2}) {",
			"\t${0:$TM_SELECTED_TEXT}",
			"};"
		],
		"description": "Create an XQuery function"
	},
	"Create variable declaration": {
		"prefix": "var",
		"body": "declare variable $${1:varname} := ${2:expr};${0}"
	},
	"Import module": {
		"prefix": "import",
		"body": "import module namespace ${1} = \"${2}\";${0}"
	},
	"Declare namespace": {
		"prefix": "decns",
		"body": "declare namespace ${1} = \"${2}\";${0}"
	},
	"Declare TEI namespace": {
		"prefix": "tei",
		"body": "declare namespace tei=\"http://www.tei-c.org/ns/1.0\";${0}"
	},
	"JSON output": {
		"prefix": "json",
		"body": [
			"declare namespace output=\"http://www.w3.org/2010/xslt-xquery-serialization\";",
			"declare option output:method \"json\";",
			"declare option output:media-type \"application/json\";${0}"
		]
	},
	"Output declaration": {
		"prefix": "output",
		"body": [
			"declare namespace output=\"http://www.w3.org/2010/xslt-xquery-serialization\";",
			"declare option output:method \"${1:xml}\";",
			"declare option output:media-type \"${2:application/xml}\";${0}"
		]
	},
	"XQuery declaration": {
		"prefix": "xquery",
		"body": "xquery version \"${1:3.1}\";\n\n${0}"
	},
	"If statement": {
		"prefix": "if",
		"body": [
			"if (${1}) then",
			"\t${2}",
			"else",
			"\t${0}"
		]
	},
	"For statement": {
		"prefix": "for",
		"body": "for $${1} in $0"
	},
	"Let statement": {
		"prefix": "let",
		"body": "let $${1} := $0"
	},
	"String constructor": {
		"prefix": "sc",
		"body": "``[${0:$TM_SELECTED_TEXT}]``",
		"description": "Insert a string constructor"
	},
	"String constructor interpolation": {
		"prefix": "sci",
		"body": "`{${0:$TM_SELECTED_TEXT}}`",
		"description": "Insert XQuery code inside a string constructor"
	},
	"XQDoc comment for a function": {
		"prefix": "fc",
		"body": [
			"(:~",
			" : $0",
			" :)"
		]
	}
}